version: "3.8"
services:

    # PHP service
    app:
        build:
            context: ./docker/php8.1-fpm
            dockerfile: Dockerfile
        container_name: php-app
        working_dir: /var/www/
        volumes:
            - "${VOLUME_APP}:/var/www"
        networks:
            - app-network
        extra_hosts:
            - "host.docker.internal:host-gateway"

    # Nginx service
    nginx:
        image: nginx:alpine
        container_name: php-nginx
        ports:
            - "${PORT_APP}:80"
        volumes:
            - "${VOLUME_APP}:/var/www"
            - "${VOLUME_NGINX_CONFIG}:/etc/nginx/conf.d/"
        networks:
            - app-network

    # MySQL database service
    db:
        image: mysql:5.7
        container_name: mysql-db
        ports:
            - "${PORT_MYSQL}:${PORT_MYSQL}"
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        env_file:
            - ./.env
        restart: unless-stopped
        volumes:
            - "${VOLUME_MYSQL_DB}:/var/lib/mysql"
        networks:
            - app-network

    # PHPMyAdmin database service
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:5.0.1
        container_name: phpmyadmin
        restart: always
        environment:
            PMA_HOST: ${DB_HOST}
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        ports:
            - "${PORT_PHPMYADMIN}:80"
        networks:
            - app-network
    
    # Mongo database service
    mongo:
        image: mongo:5.0
        container_name: mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${DB_MONGO_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${DB_MONGO_PASSWORD}
        env_file:
            - ./.env
        restart: unless-stopped
        ports:
            - "${PORT_MONGO}:${PORT_MONGO}"
        volumes:
            - "${VOLUME_MONGO_DB}/db:/data/db"
            - "${VOLUME_MONGO_DB}/dev.archive:/Databases/dev.archive"
            - "${VOLUME_MONGO_DB}/production:/Databases/production"
        networks:
            - app-network

    # Mongo Express service
    mongo-express:
        image: mongo-express
        container_name: mexpress
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_MONGO_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_MONGO_PASSWORD}
            ME_CONFIG_MONGODB_URL: "mongodb://${DB_MONGO_USERNAME}:${DB_MONGO_PASSWORD}@mongo:${PORT_MONGO}/?authSource=admin"
            ME_CONFIG_BASICAUTH_USERNAME: ${MEXPRESS_USERNAME}
            ME_CONFIG_BASICAUTH_PASSWORD: ${MEXPRESS_PASSWORD}
        env_file:
            - ./.env
        links:
            - mongo
        restart: unless-stopped
        ports:
            - "${PORT_MONGO_EXPRESS}:${PORT_MONGO_EXPRESS}"
        networks:
            - app-network
            
networks:
    app-network:
        driver: bridge